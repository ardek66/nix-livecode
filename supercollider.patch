diff --git a/common/SC_Filesystem_unix.cpp b/common/SC_Filesystem_unix.cpp
index 52dc1fd2d..8ae736722 100644
--- a/common/SC_Filesystem_unix.cpp
+++ b/common/SC_Filesystem_unix.cpp
@@ -115,7 +115,7 @@ Path SC_Filesystem::defaultUserAppSupportDirectory() {
     return p.empty() ? p : p / DOT_LOCAL / SHARE_DIR_NAME / SC_FOLDERNAME_APPLICATION_NAME;
 }
 
-Path SC_Filesystem::defaultUserConfigDirectory() {
+Path SC_Filesystem::defaultUserConfigDirectory() {  
     const char* xdg_config_home = getenv("XDG_CONFIG_HOME");
     if (xdg_config_home)
         return Path(xdg_config_home) / SC_FOLDERNAME_APPLICATION_NAME;
diff --git a/lang/LangSource/SC_LanguageConfig.cpp b/lang/LangSource/SC_LanguageConfig.cpp
index f4b22c293..757432cd2 100644
--- a/lang/LangSource/SC_LanguageConfig.cpp
+++ b/lang/LangSource/SC_LanguageConfig.cpp
@@ -207,7 +207,16 @@ bool SC_LanguageConfig::defaultLibraryConfig(bool standalone) {
 bool SC_LanguageConfig::readLibraryConfig(bool standalone) {
     bool configured = false;
 
-    if (bfs::exists(gConfigFile))
+    const char* sclangConfPath = getenv("SCLANG_CONF_PATH");
+
+    if(sclangConfPath) {
+      const Path envConfigFile = Path(sclangConfPath);
+
+      if (bfs::exists(envConfigFile))
+	configured = readLibraryConfigYAML(envConfigFile, standalone);
+    }
+    
+    if (!configured && bfs::exists(gConfigFile))
         configured = readLibraryConfigYAML(gConfigFile, standalone);
 
     if (!configured && !standalone) {
